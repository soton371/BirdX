"""add admin

Revision ID: 87d2f892418c
Revises: 
Create Date: 2025-04-10 23:37:44.411437

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '87d2f892418c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ssd')
    op.drop_table('ram_sizes')
    op.drop_table('special_features')
    op.drop_table('processor_models')
    op.drop_table('hdd')
    op.drop_table('display_types')
    op.drop_table('brands')
    op.drop_table('ram_types')
    op.drop_table('processor_types')
    op.drop_table('graphics')
    op.drop_table('display_sizes')
    op.drop_table('generation_series')
    op.drop_table('social_links')
    op.add_column('admin', sa.Column('image', sa.String(), nullable=True))
    op.alter_column('admin', 'password',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_constraint('admin_email_key', 'admin', type_='unique')
    op.create_index(op.f('ix_admin_email'), 'admin', ['email'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_admin_email'), table_name='admin')
    op.create_unique_constraint('admin_email_key', 'admin', ['email'])
    op.alter_column('admin', 'password',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('admin', 'image')
    op.create_table('social_links',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('platform', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='social_links_pkey'),
    sa.UniqueConstraint('platform', name='social_links_platform_key'),
    sa.UniqueConstraint('url', name='social_links_url_key')
    )
    op.create_table('generation_series',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='generation_series_pkey'),
    sa.UniqueConstraint('name', name='generation_series_name_key')
    )
    op.create_table('display_sizes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('min_size', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('max_size', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='display_sizes_pkey'),
    sa.UniqueConstraint('max_size', name='display_sizes_max_size_key'),
    sa.UniqueConstraint('min_size', name='display_sizes_min_size_key')
    )
    op.create_table('graphics',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='graphics_pkey'),
    sa.UniqueConstraint('name', name='graphics_name_key')
    )
    op.create_table('processor_types',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='processor_types_pkey'),
    sa.UniqueConstraint('name', name='processor_types_name_key')
    )
    op.create_table('ram_types',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='ram_types_pkey'),
    sa.UniqueConstraint('name', name='ram_types_name_key')
    )
    op.create_table('brands',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='brands_pkey'),
    sa.UniqueConstraint('name', name='brands_name_key')
    )
    op.create_table('display_types',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='display_types_pkey'),
    sa.UniqueConstraint('name', name='display_types_name_key')
    )
    op.create_table('hdd',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='hdd_pkey'),
    sa.UniqueConstraint('name', name='hdd_name_key')
    )
    op.create_table('processor_models',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='processor_models_pkey'),
    sa.UniqueConstraint('name', name='processor_models_name_key')
    )
    op.create_table('special_features',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='special_features_pkey'),
    sa.UniqueConstraint('name', name='special_features_name_key')
    )
    op.create_table('ram_sizes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='ram_sizes_pkey'),
    sa.UniqueConstraint('name', name='ram_sizes_name_key')
    )
    op.create_table('ssd',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='ssd_pkey'),
    sa.UniqueConstraint('name', name='ssd_name_key')
    )
    # ### end Alembic commands ###
